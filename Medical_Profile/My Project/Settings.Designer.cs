// ------------------------------------------------------------------------------
// <auto-generated>
// This code was generated by a tool.
// Runtime Version:4.0.30319.42000
// 
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Diagnostics;
using Microsoft.VisualBasic;
using Microsoft.VisualBasic.CompilerServices;

namespace Medical_Profile.My
{
 [System.Runtime.CompilerServices.CompilerGenerated()]
 [System.CodeDom.Compiler.GeneratedCode("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.4.0.0")]
 [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
 internal sealed partial class MySettings : System.Configuration.ApplicationSettingsBase
 {
  private static MySettings defaultInstance = (MySettings)Synchronized(new MySettings());

  /* TODO ERROR: Skipped RegionDirectiveTrivia *//* TODO ERROR: Skipped IfDirectiveTrivia */
  private static bool addedHandler;
  private static object addedHandlerLockObject = new object();

  [DebuggerNonUserCode()]
  [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)]
  private static void AutoSaveSettings(object sender, EventArgs e)
  {
   if (MyProject.Application.SaveMySettingsOnExit)
   {
    MySettingsProperty.Settings.Save();
   }
  }
  /* TODO ERROR: Skipped EndIfDirectiveTrivia *//* TODO ERROR: Skipped EndRegionDirectiveTrivia */
  public static MySettings Default
  {
   get
   {

    /* TODO ERROR: Skipped IfDirectiveTrivia */
    if (!addedHandler)
    {
     lock (addedHandlerLockObject)
     {
      if (!addedHandler)
      {
       MyProject.Application.Shutdown += AutoSaveSettings;
       addedHandler = true;
      }
     }
    }
    /* TODO ERROR: Skipped EndIfDirectiveTrivia */
    return defaultInstance;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("File")]
  public string lines_setting
  {
   get
   {
    return Conversions.ToString(this["lines_setting"]);
   }

   set
   {
    this["lines_setting"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("True")]
  public bool first_run_flag
  {
   get
   {
    return Conversions.ToBoolean(this["first_run_flag"]);
   }

   set
   {
    this["first_run_flag"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("")]
  public string ptype
  {
   get
   {
    return Conversions.ToString(this["ptype"]);
   }

   set
   {
    this["ptype"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("")]
  public string department
  {
   get
   {
    return Conversions.ToString(this["department"]);
   }

   set
   {
    this["department"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  public System.Collections.Specialized.StringCollection endpoints
  {
   get
   {
    return (System.Collections.Specialized.StringCollection)this["endpoints"];
   }

   set
   {
    this["endpoints"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue(@"c:\users\bud")]
  public string start_dir
  {
   get
   {
    return Conversions.ToString(this["start_dir"]);
   }

   set
   {
    this["start_dir"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("")]
  public string k1
  {
   get
   {
    return Conversions.ToString(this["k1"]);
   }

   set
   {
    this["k1"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("")]
  public string User_number
  {
   get
   {
    return Conversions.ToString(this["User_number"]);
   }

   set
   {
    this["User_number"] = value;
   }
  }

  [System.Configuration.UserScopedSetting()]
  [DebuggerNonUserCode()]
  [System.Configuration.DefaultSettingValue("True")]
  public bool trace
  {
   get
   {
    return Conversions.ToBoolean(this["trace"]);
   }

   set
   {
    this["trace"] = value;
   }
  }
 }
}

namespace Medical_Profile.My
{
 [HideModuleName()]
 [DebuggerNonUserCode()]
 [System.Runtime.CompilerServices.CompilerGenerated()]
 internal static class MySettingsProperty
 {
  [System.ComponentModel.Design.HelpKeyword("My.Settings")]
  internal static MySettings Settings
  {
   get
   {
    return MySettings.Default;
   }
  }
 }
}